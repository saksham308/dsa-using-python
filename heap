class heap():

    def __init__(self):
        self.arr=[-1]
        self.size=0

    def insert(self,data):
        self.size+=1

        //adding the ele to last position of heap
        self.arr.append(data)
        index=self.size
        
        while index>1:
        //checking with the its parent
            if self.arr[index//2]<data:
                self.arr[index//2],self.arr[index]=self.arr[index],self.arr[index//2]
                index=index//2
            else:
                break
    def heapify(self,arr):
        
    def delete(self):
      //swapping first element of heap with last element

        self.arr[1],self.arr[self.size]=self.arr[self.size],self.arr[1]
      //removing lst ele
        self.arr.pop()
        self.size-=1
        index=1
      //bring the element at first pos to its correct position
        while index<=self.size:
            leftChild=2*index
            rightChild=2*index+1
            if leftChild<=self.size and self.arr[leftChild]>self.arr[index]:
                self.arr[index],self.arr[leftChild]=self.arr[leftChild],self.arr[index]
                index=leftChild
            elif rightChild<=self.size and self.arr[rightChild]>self.arr[index]:
                self.arr[rightChild],self.arr[index]=self.arr[index],sel0.arr[rightChild]
                index=rightChild
            else:
                return 

    def printHeap(self):
        print(self.arr[1:],self.size)
heap1=heap()
heap1.insert(50)
heap1.insert(55)            
heap1.insert(53)
heap1.insert(52)
heap1.insert(54)
heap1.delete()
heap1.printHeap()
heap1.delete()
heap1.printHeap()
